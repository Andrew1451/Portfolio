<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="stylesheets/port2.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css"
        integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link rel="icon" type="image/png" href="/images/monitor.png" />
    <title>Andrew Gaynor</title>
  </head>
  <body>
    <ul class="navbar">
      <li id="icon"><a href="/"><i class="fas fa-desktop"></i></a></li>
      <li id="resume"><a href="/resume">resum√©</a></li>
      <li><a href="/experience">experience</a></li>
      <li><a href="/contact">contact</a></li>
      <li id="about"><a href="/about">about me</a></li>
    </ul>
    <div class="experience1">
        <div id="experienceborder">
            <p>
                I've been coding for about four years now. My main focus has been on the front end (especially React). 
                I use Node and Express on the backend, along with MongoDB or MySQL for my database. I record tutorials on 
                <a target="_blank" class="lime-font" href="https://www.youtube.com/channel/UCD0JOhEl8HvPowpg8Ri3CvA">YouTube</a>, 
                and write <a target="_blank" class="lime-font" href="https://dev.to/techcheck">blogs</a> as well. I recently built 
                MusicTalk, an application where users post about music. They can follow users, 
                like posts, and comment on posts. For this application, I used React, Redux, and MySQL. You can find all of my 
                code on my <a target="_blank" class="lime-font" href="https://github.com/Andrew1451">Github Page.</a>
                </p>
        </div>
    </div>
    <!-- <img class="images leftimages" src="/images/imagegallery2.png" alt="Image gallery website">
    <img class="images" src="/images/imagegallery1.png" alt="Image gallery website">
    <img class="images leftimages" src="/images/pattern.png" alt="Pattern website">
    <img class="images" src="/images/article.png" alt="Article formatted website">
    <img class="images leftimages" src="/images/candymuseum.png" alt="Candy Museum website">
    <img class="images" src="/images/purrfect.png" alt="Purrfect website">
    <a target="_blank" href="https://vast-garden-74703.herokuapp.com/"><img class="images leftimages" src="images/colorgame.png" alt="Color Game app"></a>
    <img class="images" src="/images/yelpcamp.png" alt="YelpCamp website">
    <a target="_blank" href="https://pure-temple-38542.herokuapp.com/"><img class="images leftimages" src="/images/Gify.png" alt="Gif website"></a>
    <a target="_blank" href="https://pacific-garden-56272.herokuapp.com/"><img class="images leftimages" id="battleship" src="/images/battleship.png" alt="Battleship game"></a> -->
    <a target="_blank" href="https://andrew1451.github.io/Kawasaki/views/pages/index"><img class="images leftimages" src="images/KawasakiShot.png" alt="Kawasaki website"></a>
    <a target="_blank" href="https://andrew1451.github.io/Kawasaki/views/pages/accessories"><img class="images" src="images/KawasakiShot2.png" alt="Kawasaki accessories page"></a>
    <div class='summary' style='margin-bottom: 0px;'>
        <p><span style='font-size: 15px; color: lime;'>&#x21E7;</span></p>
        <p class='lime-font'>
            This Kawasaki site is done with just HTML and CSS, but I think it really shows off what I can do when working with a 
            designer. There's a touch of Javascript to show/hide the navigation menu on mobile. Along with a nice transition while
            the menu opens and closes.
        </p>
    </div>
    <a target="_blank" href="https://arcane-wildwood-75216.herokuapp.com/"><img class="images leftimages" src="images/Post-A-Joke2.1.png" alt="Post A Joke app"></a>
    <a target="_blank" href="https://arcane-wildwood-75216.herokuapp.com/"><img class="images" src="images/Post-A-Joke4.1.png" alt="Post A Joke list of jokes"></a>
    <div class='summary'>
        <p><span style='font-size: 15px; color: #6ac6ff;'>&#x21E7;</span></p>
        <p style='color: #6ac6ff;'>
            This twitter-like application, Post-A-Joke, is more dynamic. Users can make an account, post jokes, follow other users, 
            and see their jokes. I store the users and their jokes in MongoDB/MLab. When they search for friends, I show a list of 
            users from the database, and have a search field where they can type in a username, and it will filter the available 
            usernames. When they click on the username/"add friend button", I use an ajax call on the spot to add the username to 
            the user's friends. I replace the username with a text that says, "Added!", without refreshing the page. When the user 
            views all of the jokes, I pull all of their friends' jokes from the database, put them in chronological order, then 
            display them in that order.
        </p>
    </div>
    <a target="_blank" href="https://brave-agnesi-61ea6b.netlify.app/"><img class="images leftimages fit" src="images/FitnessShot.png" alt="Fitness Tracker app"></a>
    <a target="_blank" href="https://brave-agnesi-61ea6b.netlify.app/"><img class="images fit" src="images/FitnessShot2.png" alt="Fitness Tracker list of workouts"></a>
    <div class='summary'>
        <p><span style='font-size: 15px; color: lime;'>&#x21E7;</span></p>
        <p class='lime-font'>
            For this Fitness Tracker app, I used React, Gatsby, Redux, and Firebase's realtime database. After making an 
            account, users can save each exercise, then save the finished 
            workout. I save each exercise in local storage, so it persists if they leave the page and come back. When they 
            save the workout, I take the exercises from the local storage, attach the date to the beginning of the array, 
            and save the workout in the database. When displaying all previous workouts, I reverse the order so it's displayed 
            most recent to oldest. I made a Workout Component where I display the date and the list of exercises. I loop through 
            all of the workouts, take the date from each array, then use the Workout Component to display the date and the exercises 
            for each workout. Users can delete workouts as well. 
        </p>
    </div>
    <a target="_blank" href="https://music-talk.netlify.app"><img class="images leftimages fit2" src="images/MusicTalk1.png" alt="MusicTalk app"></a>
    <a target="_blank" href="https://music-talk.netlify.app"><img class="images fit2" src="images/MusicTalk2.png" alt="MusicTalk app profile page"></a>
    <div class='summary'>
        <p><span style='font-size: 15px; color: #01b7ee'>&#x21E7;</span></p>
        <p style='color: #01b7ee;'>
            MusicTalk is a facebook clone where users post about music. Users can make posts and follow other users to see their posts.
            They can like posts and comment on posts. On the profile page, I show the user's posts and up to six friends. If they haven't made
            a post, I let them know and show a link that says "create one." If they don't have any friends, I show an extra link to Find Friends
            in place of where the list of Friends would be. Built with React, Redux, Node, and MySQL.
        </p>
        <hr id="music-hr">
        <a id="music-a" target="_blank" href="https://youtu.be/Ihcz1Y9K1qY">- Video Demo -</a>
    </div>
</body>
</html>